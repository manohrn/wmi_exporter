import requests
from datetime import datetime, timedelta

# Grafana Cloud API details
GRAFANA_CLOUD_API_URL = "https://<your-grafana-instance>/api/prom/alerts"
API_KEY = "Bearer <your-api-key>"  # Replace with your Grafana Cloud API key

def get_inhibition_alert_count_by_day():
    # Calculate the time range for the past week
    end_time = datetime.utcnow()
    start_time = end_time - timedelta(days=7)

    # Initialize a dictionary to hold the count for each day
    daily_counts = {}

    # Iterate over each day in the past week
    for i in range(7):
        day_start = start_time + timedelta(days=i)
        day_end = day_start + timedelta(days=1)

        # Convert to RFC3339 format
        day_start_str = day_start.strftime('%Y-%m-%dT%H:%M:%SZ')
        day_end_str = day_end.strftime('%Y-%m-%dT%H:%M:%SZ')

        # Define the parameters for the API request
        params = {
            "start": day_start_str,
            "end": day_end_str
        }

        # Headers for authorization
        headers = {
            "Authorization": API_KEY,
            "Content-Type": "application/json"
        }

        # Make the API request to fetch alerts
        response = requests.get(GRAFANA_CLOUD_API_URL, headers=headers, params=params)

        if response.status_code == 200:
            alerts = response.json()
            inhibition_alert_count = sum(1 for alert in alerts if alert.get("status", {}).get("state") == "inhibited")
            # Store the count for this day
            daily_counts[day_start.strftime('%Y-%m-%d')] = inhibition_alert_count
        else:
            print(f"Failed to fetch alerts for {day_start.strftime('%Y-%m-%d')}. Status code: {response.status_code}")
            daily_counts[day_start.strftime('%Y-%m-%d')] = None

    return daily_counts

# Fetch and print the inhibition alert count for each day
counts = get_inhibition_alert_count_by_day()
for day, count in counts.items():
    print(f"Inhibition alert count for {day}: {count}")
