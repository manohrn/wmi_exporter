import json
from confluent_kafka import Consumer, KafkaError

def extract_device_name(message_value):
    try:
        message_json = json.loads(message_value)
        device_name = message_json.get('device_name')
        return device_name
    except json.JSONDecodeError:
        print("Error decoding JSON")
        return None

def consume_messages(broker, group, topics):
    conf = {
        'bootstrap.servers': broker,
        'group.id': group,
        'auto.offset.reset': 'earliest'
    }

    consumer = Consumer(conf)

    def print_assignment(consumer, partitions):
        print('Assignment:', partitions)

    consumer.subscribe(topics, on_assign=print_assignment)

    try:
        while True:
            msg = consumer.poll(timeout=1.0)
            if msg is None:
                continue
            if msg.error():
                if msg.error().code() == KafkaError._PARTITION_EOF:
                    continue
                else:
                    print(msg.error())
                    break

            device_name = extract_device_name(msg.value().decode('utf-8'))
            if device_name == 'Mano':
                print(f'Message: {msg.value().decode("utf-8")}')

    except KeyboardInterrupt:
        pass
    finally:
        consumer.close()

if __name__ == "__main__":
    broker = 'localhost:9092'
    group = 'my_consumer_group'
    topics = ['my_topic']

    consume_messages(broker, group, topics)
