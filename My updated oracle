from prometheus_client import start_http_server, Gauge
import cx_Oracle
import pandas as pd
import csv
import os
import time

# Set up environment
oh = "C:/temp/mano/oracle/oracle"
os.environ["ORACLE_HOME"] = oh
os.environ["PATH"] = oh + os.pathsep + os.environ["PATH"]

# Database connection details
user = ''
password = ''
port = ''
service_name = ''
conn_string = "{port}/{service_name}".format(port=port, service_name=service_name)

# Prometheus metrics
oracle_metrics_gauge = Gauge('oracle_metrics', 'Metrics from Oracle Database', ['target_name', 'target_type', 'availability_status'])

def fetch_metrics():
    connection = cx_Oracle.connect(user=user, password=password, dsn=conn_string)
    sql = """
    SELECT target_name, target_type, availability_status, start_timestamp
    FROM SYSMAN.MGMT$AVAILABILITY_CURRENT
    WHERE target_type IN ('rac_database', 'oracle_database', 'oracle_pdb')
      AND LOWER(target_name) NOT LIKE '%root%'
    ORDER BY 1
    """
    with connection.cursor() as cursor:
        cursor.arraysize = 5000
        cursor.execute(sql)
        results = cursor.fetchall()
        for row in results:
            target_name, target_type, availability_status, _ = row
            oracle_metrics_gauge.labels(target_name, target_type, availability_status).set(1)
    connection.close()

if __name__ == '__main__':
    # Start up the server to expose the metrics.
    start_http_server(8000)
    print("Prometheus metrics server started at http://localhost:8000")

    # Fetch and expose metrics in an infinite loop
    while True:
        fetch_metrics()
        time.sleep(60)  # Fetch metrics every 60 seconds
