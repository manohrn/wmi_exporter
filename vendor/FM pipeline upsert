import json
import requests
from requests.auth import HTTPBasicAuth
from jinja2 import Template

# === Config: Auth + API ===
url = "https://fleet-management-prod-001.grafana.net/pipeline.v1.PipelineService/UpdatePipeline"
username = "user"     # replace with your actual username
password = "pass"     # replace with your actual password

# === Dynamic Inputs for Template ===
template_vars = {
    "scrape_interval": "60s",
    "collector_id": "host-abc123",
    "url": "https://example.grafana.net/api/prom/push",
    "username": "grafana_user",
    "password_file": "/etc/secrets/grafana_password"
}

# === Load and Render Template ===
with open("config.alloy", "r") as f:
    template = Template(f.read())
    rendered_contents = template.render(template_vars)

# === Build Payload ===
payload = {
    "id": "22234",
    "name": "myname",
    "contents": rendered_contents,
    "matchers": ['collector.os="linux"', 'team!="team-a"'],
    "enabled": True
}

# === Send Request ===
headers = {
    "Content-Type": "application/json"
}

try:
    response = requests.post(
        url,
        headers=headers,
        auth=HTTPBasicAuth(username, password),
        data=json.dumps(payload)
    )

    if response.status_code in [200, 201]:
        print("Pipeline upserted successfully.")
        print(json.dumps(response.json(), indent=2))
    else:
        print(f"Failed with {response.status_code}: {response.text}")

except requests.exceptions.RequestException as e:
    print(f"Request error: {e}")
