import os
import yaml
import re


def fetch_and_format_yaml(api_url, username, password):
    """
    Fetch YAML data from an API using basic authentication and format it.

    Args:
        api_url (str): The API endpoint URL.
        username (str): Username for basic authentication.
        password (str): Password for basic authentication.

    Returns:
        dict: Parsed YAML data.
    """
    import requests

    try:
        # Send GET request with basic authentication
        response = requests.get(api_url, auth=(username, password))

        # Raise an exception if the response is not successful
        response.raise_for_status()

        raw_yaml = response.text

        # Reformat the YAML if improperly formatted
        formatted_yaml = reformat_yaml(raw_yaml)

        # Parse YAML into a Python dictionary
        parsed_yaml = yaml.safe_load(formatted_yaml)

        return parsed_yaml
    except requests.exceptions.RequestException as e:
        print(f"HTTP Request failed: {e}")
        return None
    except yaml.YAMLError as e:
        print(f"Error parsing YAML: {e}")
        return None


def reformat_yaml(raw_yaml):
    """
    Reformat a raw YAML string into proper YAML structure.

    Args:
        raw_yaml (str): Raw YAML content as a string.

    Returns:
        str: Reformatted YAML string.
    """
    try:
        # Remove leading/trailing quotes if present
        raw_yaml = raw_yaml.strip("\"'")
        # Replace any improper characters or patterns
        raw_yaml = raw_yaml.replace("\\n", "\n").replace("\\t", "\t")
        # Add spaces after colons if missing (e.g., `key:value` -> `key: value`)
        raw_yaml = re.sub(r"(?<=:)(\S)", r" \1", raw_yaml)
        return raw_yaml
    except Exception as e:
        print(f"Error reformatting YAML: {e}")
        return raw_yaml


def save_yaml_to_file(namespace, config_data, base_dir):
    """
    Save YAML data to a file in the namespace-specific folder.

    Args:
        namespace (str): Namespace name.
        config_data (dict): YAML data to save.
        base_dir (str): Base directory to store the files.
    """
    namespace_dir = os.path.join(base_dir, namespace)
    os.makedirs(namespace_dir, exist_ok=True)

    file_path = os.path.join(namespace_dir, f"{namespace}_config.yaml")
    with open(file_path, "w") as file:
        # Ensure YAML is formatted correctly
        formatted_yaml = yaml.dump(
            config_data, default_flow_style=False, sort_keys=False, indent=4
        )
        file.write(formatted_yaml)
    print(f"Saved configuration for namespace '{namespace}' to {file_path}")


def process_namespaces(api_url, username, password, base_dir):
    """
    Fetch namespaces, extract configuration for each namespace, and save files.

    Args:
        api_url (str): Base API URL to fetch namespaces.
        username (str): Username for basic authentication.
        password (str): Password for basic authentication.
        base_dir (str): Base directory to store namespace folders and files.
    """
    # Fetch namespace list
    namespaces_data = fetch_and_format_yaml(api_url, username, password)
    if namespaces_data is None or "namespaces" not in namespaces_data:
        print("Failed to fetch namespace list or invalid response format.")
        return

    # Iterate over namespaces and process each one
    for namespace in namespaces_data["namespaces"]:
        namespace_name = namespace.get("name")
        if not namespace_name:
            continue

        # Fetch config for each namespace
        namespace_config_url = f"{api_url}/{namespace_name}/config"  # Modify API endpoint as needed
        config_data = fetch_and_format_yaml(namespace_config_url, username, password)

        if config_data:
            # Save the config to a file
            save_yaml_to_file(namespace_name, config_data, base_dir)
        else:
            print(f"Failed to fetch config for namespace: {namespace_name}")


if __name__ == "__main__":
    # API details
    base_api_url = "https://example.com/api/namespaces"  # Replace with your API base URL
    username = "your_username"                          # Replace with your username
    password = "your_password"                          # Replace with your password
    output_base_dir = "./namespace_configs"             # Base directory to store namespace files

    process_namespaces(base_api_url, username, password, output_base_dir)
