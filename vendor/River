logging {
  level  = "debug"
  format = "logfmt"
}

livedebugging {
  enabled = true
}

discovery.file "tcp" {
  files = ["blackbox_tcp.yaml"]
}

discovery.file "icmp" {
  files = ["blackbox_icmp.yaml"]
}

prometheus.exporter.blackbox "blackbox_tcp" {
  config = <<-EOT
    modules:
      tcp_connect:
        prober: tcp
        timeout: 5s
        tcp:
          preferred_ip_protocol: ip4
  EOT

  targets = discovery.file.tcp.targets
}

prometheus.exporter.blackbox "blackbox_icmp" {
  config = <<-EOT
    modules:
      icmp:
        prober: icmp
        timeout: 5s
        icmp:
          preferred_ip_protocol: ip4
  EOT

  targets = discovery.file.icmp.targets
}

#######################
# Relabel TCP Targets
#######################
discovery.relabel "integrations_blackbox_tcp" {
  targets = prometheus.exporter.blackbox_tcp.targets

  rule {
    target_label = "job"
    replacement = "integrations/blackbox_tcp_test"
  }

  rule {
    source_labels = ["__param_target"]
    target_label = "failed_target"
  }
}

#######################
# Relabel ICMP Targets
#######################
discovery.relabel "integrations_blackbox_icmp" {
  targets = prometheus.exporter.blackbox_icmp.targets

  rule {
    source_labels = ["__param_target"]
    target_label = "instance"
  }

  rule {
    target_label = "job"
    replacement = "integrations/blackbox_icmp_test"
  }
}

#######################
# Scrape TCP
#######################
prometheus.scrape "blackbox_tcp" {
  targets         = discovery.relabel.integrations_blackbox_tcp.output
  forward_to      = [prometheus.remote_write.integrations.receiver]
  job_name        = "blackbox_tcp"
  scrape_interval = "60s"
  scrape_timeout  = "5s"
}

#######################
# Scrape ICMP
#######################
prometheus.scrape "blackbox_icmp" {
  targets         = discovery.relabel.integrations_blackbox_icmp.output
  forward_to      = [prometheus.remote_write.integrations.receiver]
  job_name        = "blackbox_icmp"
  scrape_interval = "60s"
  scrape_timeout  = "30s"
}

#######################
# Remote Write
#######################
prometheus.remote_write "integrations" {
  endpoint {
    url = "https://prometheus-dedicated-14-prod-us-central-0.grafana.net/api/prom/push"

    basic_auth {
      username = "279492"
      password = "eyJrIjoiMzYzZDc5M2YxNTRiZTk2Y2FlYjI5ZGGE2J1lYjQ1Nmz0TkYTQ=="
    }

    proxy_url = "http://proxy.wellsfargo.com:8080"
  }

  queue_config {
    capacity          = 5000
    max_shards        = 10
    max_samples_per_send = 1000
  }
}
