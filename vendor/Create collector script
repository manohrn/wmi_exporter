import requests
from requests.auth import HTTPBasicAuth

# Replace with your actual credentials and endpoint
base_url = "https://fleet-management-prod-001.grafana.net/collector.v1.CollectorService"
username = "your-username"
password = "your-password"

headers = {
    "Content-Type": "application/json"
}

# Create collector
def create_collector(name, os, version, labels):
    url = f"{base_url}/CreateCollector"
    payload = {
        "collector": {
            "name": name,
            "os": os,
            "version": version
        },
        "labels": labels,
        "enabled": True
    }

    response = requests.post(url, headers=headers, json=payload, auth=HTTPBasicAuth(username, password))
    print(f"Creating {name} - Status Code:", response.status_code)
    try:
        print(response.json())
    except Exception:
        print("Raw response:", response.text)

# List all collectors
def list_collectors():
    url = f"{base_url}/ListCollectors"
    response = requests.post(url, headers=headers, json={}, auth=HTTPBasicAuth(username, password))
    if response.status_code == 200:
        return response.json().get("collectors", [])
    else:
        print("Failed to list collectors:", response.status_code)
        return []

# Main logic
created_names = []
for i in range(1, 6):
    name = f"collector-{i}"
    os_type = "linux" if i % 2 == 0 else "windows"
    version = "v0.40.0"
    labels = {
        "env": f"env-{i}",
        "region": f"us-east-{i}",
        "team": f"team-{chr(64 + i)}"
    }
    create_collector(name, os_type, version, labels)
    created_names.append(name)

# Verify
print("\n--- Verifying Created Collectors ---")
all_collectors = list_collectors()
all_names = [c["name"] for c in all_collectors]

for name in created_names:
    if name in all_names:
        print(f"[OK] {name} found.")
    else:
        print(f"[MISSING] {name} not found!")
