import requests
import json
import os

# Replace with your actual API token and realm
API_TOKEN = "d37LbKF84b5q7sWH43N1Q"  # Update with your token
REALM = "us1"  # Change if different
BASE_URL = f"https://api.{REALM}.signalfx.com/v2"

# Directory to store JSON files
OUTPUT_DIR = "splunk_data"
os.makedirs(OUTPUT_DIR, exist_ok=True)

# Common headers
HEADERS = {
    "X-SF-Token": API_TOKEN,
    "Content-Type": "application/json"
}

def fetch_and_save_data(endpoint, filename, description):
    """Fetch data from a given endpoint and save as JSON"""
    url = f"{BASE_URL}/{endpoint}"
    try:
        response = requests.get(url, headers=HEADERS)
        response.raise_for_status()
        data = response.json()

        # Save to file
        filepath = os.path.join(OUTPUT_DIR, filename)
        with open(filepath, "w", encoding="utf-8") as f:
            json.dump(data, f, indent=4)

        print(f"✅ Successfully saved {description} to {filepath}")
    except requests.exceptions.RequestException as e:
        print(f"❌ Failed to fetch {description}: {e}")

# Fetch and save detectors
fetch_and_save_data("detector", "detectors.json", "detectors")

# Fetch and save alerts (detector rules)
fetch_and_save_data("detectorrule", "alerts.json", "alert rules")

# Fetch and save webhook integrations
fetch_and_save_data("integration", "webhooks.json", "webhook integrations")
